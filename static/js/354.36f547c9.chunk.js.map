{"version":3,"file":"static/js/354.36f547c9.chunk.js","mappings":"iQAGaA,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,QACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,MAIlB,E,UCRKK,GAAqBC,EAAAA,EAAAA,OAAK,kBAC9B,6BAD8B,IAwChC,EApCe,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGL,EAAaM,IAAI,eAApB,QAA+B,GAc1C,OAPAC,EAAAA,EAAAA,YAAU,WACHF,GAGLG,EAAAA,GAAeH,GAAOI,MAAK,SAAAC,GAAG,OAAIN,EAAgBM,EAAIC,KAAKC,QAA7B,GAC/B,GAAE,CAACP,KAGF,+BACE,6BACE,2CACA,SAAChB,EAAD,CAAWC,MAAOe,EAAOd,SAhBL,SAAAsB,GAExBZ,EAD4B,KAATY,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,KAcK,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAACpB,EAAD,CACEqB,OAAQb,EACRc,MAAO,CAAEC,KAAMrB,WAM1B,C,2MCzCKsB,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,sCAAyCD,IADjC,cACzBG,EADyB,yBAExBA,EAASX,MAFe,2CAAH,qDAKjBY,EAAU,mCAAG,WAAMlB,GAAN,uFACNe,IAAM,qDAAD,OACgCD,EADhC,iCACgEd,EADhE,YADC,cAClBK,EADkB,yBAIjBA,GAJiB,2CAAH,sDAOVc,EAAe,mCAAG,WAAMC,GAAN,uFACNL,IAAAA,IAAA,iBACXK,EADW,oBACGN,EADH,oBADM,cACvBG,EADuB,yBAItBA,EAASX,MAJa,2CAAH,sDAOfe,EAAY,mCAAG,WAAMD,GAAN,uFACHL,IAAAA,IAAA,gBACZK,EADY,4BACUN,EADV,2BADG,cACpBG,EADoB,yBAInBA,EAASX,KAAKC,SAJK,2CAAH,sDAOZe,EAAS,mCAAG,WAAMF,GAAN,uFACAL,IAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,oBADA,cACjBG,EADiB,yBAIhBA,EAASX,KAAKiB,MAJE,2CAAH,qD","sources":["components/SerchBox/SearchBox.styled.js","components/SerchBox/SerchBox.jsx","pages/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"input\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport { SearchBox } from 'components/SerchBox/SerchBox';\nimport * as API from '../services/API';\n\nconst TrendingMoviesList = lazy(() =>\n  import('components/TrendngMoviesList/TrendingMoviesList')\n);\n\nconst Movies = () => {\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const query = searchParams.get('name') ?? '';\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    API.fetchQuery(query).then(res => setSearchMovies(res.data.results));\n  }, [query]);\n\n  return (\n    <>\n      <main>\n        <h1>Search Movies</h1>\n        <SearchBox value={query} onChange={updateQueryString} />\n        <Suspense fallback={<div>Loading...</div>}>\n          <TrendingMoviesList\n            movies={searchMovies}\n            state={{ from: location }}\n          />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'a0198fa72739dc2e82f85bee51af356c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchQuery = async query => {\n  const res = await axios(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  );\n  return res;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n"],"names":["Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","TrendingMoviesList","lazy","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","searchMovies","setSearchMovies","query","get","useEffect","API","then","res","data","results","name","Suspense","fallback","movies","state","from","API_KEY","axios","getTrendingMovies","response","fetchQuery","getMovieDetails","id","fetchReviews","fetchCast","cast"],"sourceRoot":""}